
lab2_2.2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800100  000008a8  0000093c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  0080013e  0080013e  0000097a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000097a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008f7  00000000  00000000  00000a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000078a  00000000  00000000  00001357  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000037d  00000000  00000000  00001ae1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f4  00000000  00000000  00001e60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003f8  00000000  00000000  00001f54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000022e  00000000  00000000  0000234c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  0000257a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 c8 00 	jmp	0x190	; 0x190 <__vector_10>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 5d 01 	jmp	0x2ba	; 0x2ba <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ea       	ldi	r30, 0xA8	; 168
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 33       	cpi	r26, 0x3E	; 62
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e3       	ldi	r26, 0x3E	; 62
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 34       	cpi	r26, 0x4E	; 78
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 89 00 	call	0x112	; 0x112 <main>
  9e:	0c 94 52 04 	jmp	0x8a4	; 0x8a4 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
	if (c == '\n') {
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
		uart_putchar('\r', stream);
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <uart_putchar+0x12>
	UDR0 = c;
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
  ca:	e0 ec       	ldi	r30, 0xC0	; 192
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 23       	and	r24, r24
  d2:	ec f7       	brge	.-6      	; 0xce <uart_getchar+0x4>
	return UDR0;
  d4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	08 95       	ret

000000dc <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
  dc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
  e0:	87 e6       	ldi	r24, 0x67	; 103
  e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
  e6:	e0 ec       	ldi	r30, 0xC0	; 192
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	8d 7f       	andi	r24, 0xFD	; 253
  ee:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
  f6:	88 e1       	ldi	r24, 0x18	; 24
  f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
  fc:	e8 e4       	ldi	r30, 0x48	; 72
  fe:	f1 e0       	ldi	r31, 0x01	; 1
 100:	8e e0       	ldi	r24, 0x0E	; 14
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	93 83       	std	Z+3, r25	; 0x03
 106:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	91 83       	std	Z+1, r25	; 0x01
 10e:	80 83       	st	Z, r24
 110:	08 95       	ret

00000112 <main>:
volatile unsigned int edge1, edge2, pulse;
volatile int overflows, rising;

int main(void)
{
	uart_init();
 112:	0e 94 6e 00 	call	0xdc	; 0xdc <uart_init>
	DDRB |= 0x02;                      //set PB1 as output
 116:	21 9a       	sbi	0x04, 1	; 4
	TCNT1 = 0;                         //initial time counter
 118:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 11c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
	PORTB |= 0x02;                     //set PB1 as output
 120:	29 9a       	sbi	0x05, 1	; 5
	TCCR1B |= (1 << CS10) | (1 << ICES1);            //no prescaling
 122:	e1 e8       	ldi	r30, 0x81	; 129
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	81 64       	ori	r24, 0x41	; 65
 12a:	80 83       	st	Z, r24
	
	edge1 = 0;
 12c:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <edge1+0x1>
 130:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <edge1>
	edge2 = 0;
 134:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <__data_end+0x1>
 138:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <__data_end>
	rising = 0;
 13c:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <rising+0x1>
 140:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <rising>
	overflows = 0;                   //initial overflow
 144:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <overflows+0x1>
 148:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <overflows>
	TIFR1 |= (1 << ICR1);            //clear capture flag
 14c:	40 91 86 00 	lds	r20, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 150:	50 91 87 00 	lds	r21, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 154:	26 b3       	in	r18, 0x16	; 22
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <main+0x4e>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	4a 95       	dec	r20
 162:	e2 f7       	brpl	.-8      	; 0x15c <main+0x4a>
 164:	82 2b       	or	r24, r18
 166:	86 bb       	out	0x16, r24	; 22
	TIMSK1 |= (1 << ICIE1) | (1 << TOIE1);          //input capture interrupt enable
 168:	ef e6       	ldi	r30, 0x6F	; 111
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	81 62       	ori	r24, 0x21	; 33
 170:	80 83       	st	Z, r24
	sei();
 172:	78 94       	sei
	while (1)
	{
		if (TCNT1 >= 79)
 174:	e4 e8       	ldi	r30, 0x84	; 132
 176:	f0 e0       	ldi	r31, 0x00	; 0
		{
			PORTB ^= (1 << PORTB1);     //change from output to input
 178:	22 e0       	ldi	r18, 0x02	; 2
	TIFR1 |= (1 << ICR1);            //clear capture flag
	TIMSK1 |= (1 << ICIE1) | (1 << TOIE1);          //input capture interrupt enable
	sei();
	while (1)
	{
		if (TCNT1 >= 79)
 17a:	80 81       	ld	r24, Z
 17c:	91 81       	ldd	r25, Z+1	; 0x01
 17e:	8f 34       	cpi	r24, 0x4F	; 79
 180:	91 05       	cpc	r25, r1
 182:	d8 f3       	brcs	.-10     	; 0x17a <main+0x68>
		{
			PORTB ^= (1 << PORTB1);     //change from output to input
 184:	85 b1       	in	r24, 0x05	; 5
 186:	82 27       	eor	r24, r18
 188:	85 b9       	out	0x05, r24	; 5
			TCNT1 = 0;                  //clear counter
 18a:	11 82       	std	Z+1, r1	; 0x01
 18c:	10 82       	st	Z, r1
 18e:	f5 cf       	rjmp	.-22     	; 0x17a <main+0x68>

00000190 <__vector_10>:

	}
}

ISR(TIMER1_CAPT_vect)
{
 190:	1f 92       	push	r1
 192:	0f 92       	push	r0
 194:	0f b6       	in	r0, 0x3f	; 63
 196:	0f 92       	push	r0
 198:	11 24       	eor	r1, r1
 19a:	2f 93       	push	r18
 19c:	3f 93       	push	r19
 19e:	4f 93       	push	r20
 1a0:	5f 93       	push	r21
 1a2:	6f 93       	push	r22
 1a4:	7f 93       	push	r23
 1a6:	8f 93       	push	r24
 1a8:	9f 93       	push	r25
 1aa:	af 93       	push	r26
 1ac:	bf 93       	push	r27
 1ae:	ef 93       	push	r30
 1b0:	ff 93       	push	r31
	if(!rising){
 1b2:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <rising>
 1b6:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <rising+0x1>
 1ba:	89 2b       	or	r24, r25
 1bc:	29 f5       	brne	.+74     	; 0x208 <__vector_10+0x78>
		TCCR1B &= ~(1 << ICES1);    //input capture negative edge
 1be:	e1 e8       	ldi	r30, 0x81	; 129
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	8f 7b       	andi	r24, 0xBF	; 191
 1c6:	80 83       	st	Z, r24
		TIFR1 |= 0x20;             //clear capture flag
 1c8:	b5 9a       	sbi	0x16, 5	; 22
		edge1 = ICR1;
 1ca:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 1ce:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 1d2:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <edge1+0x1>
 1d6:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <edge1>
		rising = 1;
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <rising+0x1>
 1e2:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <rising>
		printf("edge1 is %u\n", edge1);
 1e6:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <edge1>
 1ea:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <edge1+0x1>
 1ee:	9f 93       	push	r25
 1f0:	8f 93       	push	r24
 1f2:	8c e1       	ldi	r24, 0x1C	; 28
 1f4:	91 e0       	ldi	r25, 0x01	; 1
 1f6:	9f 93       	push	r25
 1f8:	8f 93       	push	r24
 1fa:	0e 94 74 01 	call	0x2e8	; 0x2e8 <printf>
 1fe:	0f 90       	pop	r0
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
 204:	0f 90       	pop	r0
 206:	48 c0       	rjmp	.+144    	; 0x298 <__vector_10+0x108>
	}
	else{
		TIFR1 |= 0x20;             //clear capture flag
 208:	b5 9a       	sbi	0x16, 5	; 22
		TCCR1B |= (1 << ICES1);    //input capture negative edge
 20a:	e1 e8       	ldi	r30, 0x81	; 129
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	80 81       	ld	r24, Z
 210:	80 64       	ori	r24, 0x40	; 64
 212:	80 83       	st	Z, r24
		edge2 = ICR1;
 214:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 218:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 21c:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <__data_end+0x1>
 220:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <__data_end>
		rising = 0;
 224:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <rising+0x1>
 228:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <rising>
		if(edge2 < edge1)
 22c:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <__data_end>
 230:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <__data_end+0x1>
 234:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <edge1>
 238:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <edge1+0x1>
 23c:	28 17       	cp	r18, r24
 23e:	39 07       	cpc	r19, r25
 240:	48 f4       	brcc	.+18     	; 0x254 <__vector_10+0xc4>
		{
			overflows--;
 242:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <overflows>
 246:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <overflows+0x1>
 24a:	01 97       	sbiw	r24, 0x01	; 1
 24c:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <overflows+0x1>
 250:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <overflows>
		}
		pulse = (int)overflows * 65536u + (int)(edge2 - edge1);
 254:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <overflows>
 258:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <overflows+0x1>
 25c:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <__data_end>
 260:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <__data_end+0x1>
 264:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <edge1>
 268:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <edge1+0x1>
 26c:	82 1b       	sub	r24, r18
 26e:	93 0b       	sbc	r25, r19
 270:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <pulse+0x1>
 274:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <pulse>
		printf("pulse width is %u \n", pulse);
 278:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <pulse>
 27c:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <pulse+0x1>
 280:	9f 93       	push	r25
 282:	8f 93       	push	r24
 284:	89 e2       	ldi	r24, 0x29	; 41
 286:	91 e0       	ldi	r25, 0x01	; 1
 288:	9f 93       	push	r25
 28a:	8f 93       	push	r24
 28c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <printf>
 290:	0f 90       	pop	r0
 292:	0f 90       	pop	r0
 294:	0f 90       	pop	r0
 296:	0f 90       	pop	r0
	}
}
 298:	ff 91       	pop	r31
 29a:	ef 91       	pop	r30
 29c:	bf 91       	pop	r27
 29e:	af 91       	pop	r26
 2a0:	9f 91       	pop	r25
 2a2:	8f 91       	pop	r24
 2a4:	7f 91       	pop	r23
 2a6:	6f 91       	pop	r22
 2a8:	5f 91       	pop	r21
 2aa:	4f 91       	pop	r20
 2ac:	3f 91       	pop	r19
 2ae:	2f 91       	pop	r18
 2b0:	0f 90       	pop	r0
 2b2:	0f be       	out	0x3f, r0	; 63
 2b4:	0f 90       	pop	r0
 2b6:	1f 90       	pop	r1
 2b8:	18 95       	reti

000002ba <__vector_13>:
		
ISR(TIMER1_OVF_vect)
{
 2ba:	1f 92       	push	r1
 2bc:	0f 92       	push	r0
 2be:	0f b6       	in	r0, 0x3f	; 63
 2c0:	0f 92       	push	r0
 2c2:	11 24       	eor	r1, r1
 2c4:	8f 93       	push	r24
 2c6:	9f 93       	push	r25
	overflows++;
 2c8:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <overflows>
 2cc:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <overflows+0x1>
 2d0:	01 96       	adiw	r24, 0x01	; 1
 2d2:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <overflows+0x1>
 2d6:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <overflows>
}
 2da:	9f 91       	pop	r25
 2dc:	8f 91       	pop	r24
 2de:	0f 90       	pop	r0
 2e0:	0f be       	out	0x3f, r0	; 63
 2e2:	0f 90       	pop	r0
 2e4:	1f 90       	pop	r1
 2e6:	18 95       	reti

000002e8 <printf>:
 2e8:	a0 e0       	ldi	r26, 0x00	; 0
 2ea:	b0 e0       	ldi	r27, 0x00	; 0
 2ec:	ea e7       	ldi	r30, 0x7A	; 122
 2ee:	f1 e0       	ldi	r31, 0x01	; 1
 2f0:	0c 94 2b 04 	jmp	0x856	; 0x856 <__prologue_saves__+0x20>
 2f4:	ae 01       	movw	r20, r28
 2f6:	4b 5f       	subi	r20, 0xFB	; 251
 2f8:	5f 4f       	sbci	r21, 0xFF	; 255
 2fa:	fa 01       	movw	r30, r20
 2fc:	61 91       	ld	r22, Z+
 2fe:	71 91       	ld	r23, Z+
 300:	af 01       	movw	r20, r30
 302:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <__iob+0x2>
 306:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <__iob+0x3>
 30a:	0e 94 8a 01 	call	0x314	; 0x314 <vfprintf>
 30e:	e2 e0       	ldi	r30, 0x02	; 2
 310:	0c 94 47 04 	jmp	0x88e	; 0x88e <__epilogue_restores__+0x20>

00000314 <vfprintf>:
 314:	ab e0       	ldi	r26, 0x0B	; 11
 316:	b0 e0       	ldi	r27, 0x00	; 0
 318:	e0 e9       	ldi	r30, 0x90	; 144
 31a:	f1 e0       	ldi	r31, 0x01	; 1
 31c:	0c 94 1b 04 	jmp	0x836	; 0x836 <__prologue_saves__>
 320:	6c 01       	movw	r12, r24
 322:	7b 01       	movw	r14, r22
 324:	8a 01       	movw	r16, r20
 326:	fc 01       	movw	r30, r24
 328:	17 82       	std	Z+7, r1	; 0x07
 32a:	16 82       	std	Z+6, r1	; 0x06
 32c:	83 81       	ldd	r24, Z+3	; 0x03
 32e:	81 ff       	sbrs	r24, 1
 330:	cc c1       	rjmp	.+920    	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 332:	ce 01       	movw	r24, r28
 334:	01 96       	adiw	r24, 0x01	; 1
 336:	3c 01       	movw	r6, r24
 338:	f6 01       	movw	r30, r12
 33a:	93 81       	ldd	r25, Z+3	; 0x03
 33c:	f7 01       	movw	r30, r14
 33e:	93 fd       	sbrc	r25, 3
 340:	85 91       	lpm	r24, Z+
 342:	93 ff       	sbrs	r25, 3
 344:	81 91       	ld	r24, Z+
 346:	7f 01       	movw	r14, r30
 348:	88 23       	and	r24, r24
 34a:	09 f4       	brne	.+2      	; 0x34e <vfprintf+0x3a>
 34c:	ba c1       	rjmp	.+884    	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 34e:	85 32       	cpi	r24, 0x25	; 37
 350:	39 f4       	brne	.+14     	; 0x360 <vfprintf+0x4c>
 352:	93 fd       	sbrc	r25, 3
 354:	85 91       	lpm	r24, Z+
 356:	93 ff       	sbrs	r25, 3
 358:	81 91       	ld	r24, Z+
 35a:	7f 01       	movw	r14, r30
 35c:	85 32       	cpi	r24, 0x25	; 37
 35e:	29 f4       	brne	.+10     	; 0x36a <vfprintf+0x56>
 360:	b6 01       	movw	r22, r12
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 368:	e7 cf       	rjmp	.-50     	; 0x338 <vfprintf+0x24>
 36a:	91 2c       	mov	r9, r1
 36c:	21 2c       	mov	r2, r1
 36e:	31 2c       	mov	r3, r1
 370:	ff e1       	ldi	r31, 0x1F	; 31
 372:	f3 15       	cp	r31, r3
 374:	d8 f0       	brcs	.+54     	; 0x3ac <vfprintf+0x98>
 376:	8b 32       	cpi	r24, 0x2B	; 43
 378:	79 f0       	breq	.+30     	; 0x398 <vfprintf+0x84>
 37a:	38 f4       	brcc	.+14     	; 0x38a <vfprintf+0x76>
 37c:	80 32       	cpi	r24, 0x20	; 32
 37e:	79 f0       	breq	.+30     	; 0x39e <vfprintf+0x8a>
 380:	83 32       	cpi	r24, 0x23	; 35
 382:	a1 f4       	brne	.+40     	; 0x3ac <vfprintf+0x98>
 384:	23 2d       	mov	r18, r3
 386:	20 61       	ori	r18, 0x10	; 16
 388:	1d c0       	rjmp	.+58     	; 0x3c4 <vfprintf+0xb0>
 38a:	8d 32       	cpi	r24, 0x2D	; 45
 38c:	61 f0       	breq	.+24     	; 0x3a6 <vfprintf+0x92>
 38e:	80 33       	cpi	r24, 0x30	; 48
 390:	69 f4       	brne	.+26     	; 0x3ac <vfprintf+0x98>
 392:	23 2d       	mov	r18, r3
 394:	21 60       	ori	r18, 0x01	; 1
 396:	16 c0       	rjmp	.+44     	; 0x3c4 <vfprintf+0xb0>
 398:	83 2d       	mov	r24, r3
 39a:	82 60       	ori	r24, 0x02	; 2
 39c:	38 2e       	mov	r3, r24
 39e:	e3 2d       	mov	r30, r3
 3a0:	e4 60       	ori	r30, 0x04	; 4
 3a2:	3e 2e       	mov	r3, r30
 3a4:	2a c0       	rjmp	.+84     	; 0x3fa <vfprintf+0xe6>
 3a6:	f3 2d       	mov	r31, r3
 3a8:	f8 60       	ori	r31, 0x08	; 8
 3aa:	1d c0       	rjmp	.+58     	; 0x3e6 <vfprintf+0xd2>
 3ac:	37 fc       	sbrc	r3, 7
 3ae:	2d c0       	rjmp	.+90     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3b0:	20 ed       	ldi	r18, 0xD0	; 208
 3b2:	28 0f       	add	r18, r24
 3b4:	2a 30       	cpi	r18, 0x0A	; 10
 3b6:	40 f0       	brcs	.+16     	; 0x3c8 <vfprintf+0xb4>
 3b8:	8e 32       	cpi	r24, 0x2E	; 46
 3ba:	b9 f4       	brne	.+46     	; 0x3ea <vfprintf+0xd6>
 3bc:	36 fc       	sbrc	r3, 6
 3be:	81 c1       	rjmp	.+770    	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 3c0:	23 2d       	mov	r18, r3
 3c2:	20 64       	ori	r18, 0x40	; 64
 3c4:	32 2e       	mov	r3, r18
 3c6:	19 c0       	rjmp	.+50     	; 0x3fa <vfprintf+0xe6>
 3c8:	36 fe       	sbrs	r3, 6
 3ca:	06 c0       	rjmp	.+12     	; 0x3d8 <vfprintf+0xc4>
 3cc:	8a e0       	ldi	r24, 0x0A	; 10
 3ce:	98 9e       	mul	r9, r24
 3d0:	20 0d       	add	r18, r0
 3d2:	11 24       	eor	r1, r1
 3d4:	92 2e       	mov	r9, r18
 3d6:	11 c0       	rjmp	.+34     	; 0x3fa <vfprintf+0xe6>
 3d8:	ea e0       	ldi	r30, 0x0A	; 10
 3da:	2e 9e       	mul	r2, r30
 3dc:	20 0d       	add	r18, r0
 3de:	11 24       	eor	r1, r1
 3e0:	22 2e       	mov	r2, r18
 3e2:	f3 2d       	mov	r31, r3
 3e4:	f0 62       	ori	r31, 0x20	; 32
 3e6:	3f 2e       	mov	r3, r31
 3e8:	08 c0       	rjmp	.+16     	; 0x3fa <vfprintf+0xe6>
 3ea:	8c 36       	cpi	r24, 0x6C	; 108
 3ec:	21 f4       	brne	.+8      	; 0x3f6 <vfprintf+0xe2>
 3ee:	83 2d       	mov	r24, r3
 3f0:	80 68       	ori	r24, 0x80	; 128
 3f2:	38 2e       	mov	r3, r24
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <vfprintf+0xe6>
 3f6:	88 36       	cpi	r24, 0x68	; 104
 3f8:	41 f4       	brne	.+16     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3fa:	f7 01       	movw	r30, r14
 3fc:	93 fd       	sbrc	r25, 3
 3fe:	85 91       	lpm	r24, Z+
 400:	93 ff       	sbrs	r25, 3
 402:	81 91       	ld	r24, Z+
 404:	7f 01       	movw	r14, r30
 406:	81 11       	cpse	r24, r1
 408:	b3 cf       	rjmp	.-154    	; 0x370 <vfprintf+0x5c>
 40a:	98 2f       	mov	r25, r24
 40c:	9f 7d       	andi	r25, 0xDF	; 223
 40e:	95 54       	subi	r25, 0x45	; 69
 410:	93 30       	cpi	r25, 0x03	; 3
 412:	28 f4       	brcc	.+10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 414:	0c 5f       	subi	r16, 0xFC	; 252
 416:	1f 4f       	sbci	r17, 0xFF	; 255
 418:	9f e3       	ldi	r25, 0x3F	; 63
 41a:	99 83       	std	Y+1, r25	; 0x01
 41c:	0d c0       	rjmp	.+26     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 41e:	83 36       	cpi	r24, 0x63	; 99
 420:	31 f0       	breq	.+12     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 422:	83 37       	cpi	r24, 0x73	; 115
 424:	71 f0       	breq	.+28     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 426:	83 35       	cpi	r24, 0x53	; 83
 428:	09 f0       	breq	.+2      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 42a:	59 c0       	rjmp	.+178    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 42c:	21 c0       	rjmp	.+66     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 42e:	f8 01       	movw	r30, r16
 430:	80 81       	ld	r24, Z
 432:	89 83       	std	Y+1, r24	; 0x01
 434:	0e 5f       	subi	r16, 0xFE	; 254
 436:	1f 4f       	sbci	r17, 0xFF	; 255
 438:	88 24       	eor	r8, r8
 43a:	83 94       	inc	r8
 43c:	91 2c       	mov	r9, r1
 43e:	53 01       	movw	r10, r6
 440:	13 c0       	rjmp	.+38     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 442:	28 01       	movw	r4, r16
 444:	f2 e0       	ldi	r31, 0x02	; 2
 446:	4f 0e       	add	r4, r31
 448:	51 1c       	adc	r5, r1
 44a:	f8 01       	movw	r30, r16
 44c:	a0 80       	ld	r10, Z
 44e:	b1 80       	ldd	r11, Z+1	; 0x01
 450:	36 fe       	sbrs	r3, 6
 452:	03 c0       	rjmp	.+6      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 454:	69 2d       	mov	r22, r9
 456:	70 e0       	ldi	r23, 0x00	; 0
 458:	02 c0       	rjmp	.+4      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45a:	6f ef       	ldi	r22, 0xFF	; 255
 45c:	7f ef       	ldi	r23, 0xFF	; 255
 45e:	c5 01       	movw	r24, r10
 460:	0e 94 76 03 	call	0x6ec	; 0x6ec <strnlen>
 464:	4c 01       	movw	r8, r24
 466:	82 01       	movw	r16, r4
 468:	f3 2d       	mov	r31, r3
 46a:	ff 77       	andi	r31, 0x7F	; 127
 46c:	3f 2e       	mov	r3, r31
 46e:	16 c0       	rjmp	.+44     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 470:	28 01       	movw	r4, r16
 472:	22 e0       	ldi	r18, 0x02	; 2
 474:	42 0e       	add	r4, r18
 476:	51 1c       	adc	r5, r1
 478:	f8 01       	movw	r30, r16
 47a:	a0 80       	ld	r10, Z
 47c:	b1 80       	ldd	r11, Z+1	; 0x01
 47e:	36 fe       	sbrs	r3, 6
 480:	03 c0       	rjmp	.+6      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 482:	69 2d       	mov	r22, r9
 484:	70 e0       	ldi	r23, 0x00	; 0
 486:	02 c0       	rjmp	.+4      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 488:	6f ef       	ldi	r22, 0xFF	; 255
 48a:	7f ef       	ldi	r23, 0xFF	; 255
 48c:	c5 01       	movw	r24, r10
 48e:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <strnlen_P>
 492:	4c 01       	movw	r8, r24
 494:	f3 2d       	mov	r31, r3
 496:	f0 68       	ori	r31, 0x80	; 128
 498:	3f 2e       	mov	r3, r31
 49a:	82 01       	movw	r16, r4
 49c:	33 fc       	sbrc	r3, 3
 49e:	1b c0       	rjmp	.+54     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4a0:	82 2d       	mov	r24, r2
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	88 16       	cp	r8, r24
 4a6:	99 06       	cpc	r9, r25
 4a8:	b0 f4       	brcc	.+44     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4aa:	b6 01       	movw	r22, r12
 4ac:	80 e2       	ldi	r24, 0x20	; 32
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 4b4:	2a 94       	dec	r2
 4b6:	f4 cf       	rjmp	.-24     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 4b8:	f5 01       	movw	r30, r10
 4ba:	37 fc       	sbrc	r3, 7
 4bc:	85 91       	lpm	r24, Z+
 4be:	37 fe       	sbrs	r3, 7
 4c0:	81 91       	ld	r24, Z+
 4c2:	5f 01       	movw	r10, r30
 4c4:	b6 01       	movw	r22, r12
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 4cc:	21 10       	cpse	r2, r1
 4ce:	2a 94       	dec	r2
 4d0:	21 e0       	ldi	r18, 0x01	; 1
 4d2:	82 1a       	sub	r8, r18
 4d4:	91 08       	sbc	r9, r1
 4d6:	81 14       	cp	r8, r1
 4d8:	91 04       	cpc	r9, r1
 4da:	71 f7       	brne	.-36     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4dc:	e8 c0       	rjmp	.+464    	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 4de:	84 36       	cpi	r24, 0x64	; 100
 4e0:	11 f0       	breq	.+4      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e2:	89 36       	cpi	r24, 0x69	; 105
 4e4:	41 f5       	brne	.+80     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 4e6:	f8 01       	movw	r30, r16
 4e8:	37 fe       	sbrs	r3, 7
 4ea:	07 c0       	rjmp	.+14     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4ec:	60 81       	ld	r22, Z
 4ee:	71 81       	ldd	r23, Z+1	; 0x01
 4f0:	82 81       	ldd	r24, Z+2	; 0x02
 4f2:	93 81       	ldd	r25, Z+3	; 0x03
 4f4:	0c 5f       	subi	r16, 0xFC	; 252
 4f6:	1f 4f       	sbci	r17, 0xFF	; 255
 4f8:	08 c0       	rjmp	.+16     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4fa:	60 81       	ld	r22, Z
 4fc:	71 81       	ldd	r23, Z+1	; 0x01
 4fe:	07 2e       	mov	r0, r23
 500:	00 0c       	add	r0, r0
 502:	88 0b       	sbc	r24, r24
 504:	99 0b       	sbc	r25, r25
 506:	0e 5f       	subi	r16, 0xFE	; 254
 508:	1f 4f       	sbci	r17, 0xFF	; 255
 50a:	f3 2d       	mov	r31, r3
 50c:	ff 76       	andi	r31, 0x6F	; 111
 50e:	3f 2e       	mov	r3, r31
 510:	97 ff       	sbrs	r25, 7
 512:	09 c0       	rjmp	.+18     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 514:	90 95       	com	r25
 516:	80 95       	com	r24
 518:	70 95       	com	r23
 51a:	61 95       	neg	r22
 51c:	7f 4f       	sbci	r23, 0xFF	; 255
 51e:	8f 4f       	sbci	r24, 0xFF	; 255
 520:	9f 4f       	sbci	r25, 0xFF	; 255
 522:	f0 68       	ori	r31, 0x80	; 128
 524:	3f 2e       	mov	r3, r31
 526:	2a e0       	ldi	r18, 0x0A	; 10
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	a3 01       	movw	r20, r6
 52c:	0e 94 bd 03 	call	0x77a	; 0x77a <__ultoa_invert>
 530:	88 2e       	mov	r8, r24
 532:	86 18       	sub	r8, r6
 534:	45 c0       	rjmp	.+138    	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 536:	85 37       	cpi	r24, 0x75	; 117
 538:	31 f4       	brne	.+12     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 53a:	23 2d       	mov	r18, r3
 53c:	2f 7e       	andi	r18, 0xEF	; 239
 53e:	b2 2e       	mov	r11, r18
 540:	2a e0       	ldi	r18, 0x0A	; 10
 542:	30 e0       	ldi	r19, 0x00	; 0
 544:	25 c0       	rjmp	.+74     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 546:	93 2d       	mov	r25, r3
 548:	99 7f       	andi	r25, 0xF9	; 249
 54a:	b9 2e       	mov	r11, r25
 54c:	8f 36       	cpi	r24, 0x6F	; 111
 54e:	c1 f0       	breq	.+48     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 550:	18 f4       	brcc	.+6      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 552:	88 35       	cpi	r24, 0x58	; 88
 554:	79 f0       	breq	.+30     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 556:	b5 c0       	rjmp	.+362    	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 558:	80 37       	cpi	r24, 0x70	; 112
 55a:	19 f0       	breq	.+6      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 55c:	88 37       	cpi	r24, 0x78	; 120
 55e:	21 f0       	breq	.+8      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 560:	b0 c0       	rjmp	.+352    	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 562:	e9 2f       	mov	r30, r25
 564:	e0 61       	ori	r30, 0x10	; 16
 566:	be 2e       	mov	r11, r30
 568:	b4 fe       	sbrs	r11, 4
 56a:	0d c0       	rjmp	.+26     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 56c:	fb 2d       	mov	r31, r11
 56e:	f4 60       	ori	r31, 0x04	; 4
 570:	bf 2e       	mov	r11, r31
 572:	09 c0       	rjmp	.+18     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 574:	34 fe       	sbrs	r3, 4
 576:	0a c0       	rjmp	.+20     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 578:	29 2f       	mov	r18, r25
 57a:	26 60       	ori	r18, 0x06	; 6
 57c:	b2 2e       	mov	r11, r18
 57e:	06 c0       	rjmp	.+12     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 580:	28 e0       	ldi	r18, 0x08	; 8
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	05 c0       	rjmp	.+10     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 586:	20 e1       	ldi	r18, 0x10	; 16
 588:	30 e0       	ldi	r19, 0x00	; 0
 58a:	02 c0       	rjmp	.+4      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 58c:	20 e1       	ldi	r18, 0x10	; 16
 58e:	32 e0       	ldi	r19, 0x02	; 2
 590:	f8 01       	movw	r30, r16
 592:	b7 fe       	sbrs	r11, 7
 594:	07 c0       	rjmp	.+14     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 596:	60 81       	ld	r22, Z
 598:	71 81       	ldd	r23, Z+1	; 0x01
 59a:	82 81       	ldd	r24, Z+2	; 0x02
 59c:	93 81       	ldd	r25, Z+3	; 0x03
 59e:	0c 5f       	subi	r16, 0xFC	; 252
 5a0:	1f 4f       	sbci	r17, 0xFF	; 255
 5a2:	06 c0       	rjmp	.+12     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5a4:	60 81       	ld	r22, Z
 5a6:	71 81       	ldd	r23, Z+1	; 0x01
 5a8:	80 e0       	ldi	r24, 0x00	; 0
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	0e 5f       	subi	r16, 0xFE	; 254
 5ae:	1f 4f       	sbci	r17, 0xFF	; 255
 5b0:	a3 01       	movw	r20, r6
 5b2:	0e 94 bd 03 	call	0x77a	; 0x77a <__ultoa_invert>
 5b6:	88 2e       	mov	r8, r24
 5b8:	86 18       	sub	r8, r6
 5ba:	fb 2d       	mov	r31, r11
 5bc:	ff 77       	andi	r31, 0x7F	; 127
 5be:	3f 2e       	mov	r3, r31
 5c0:	36 fe       	sbrs	r3, 6
 5c2:	0d c0       	rjmp	.+26     	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5c4:	23 2d       	mov	r18, r3
 5c6:	2e 7f       	andi	r18, 0xFE	; 254
 5c8:	a2 2e       	mov	r10, r18
 5ca:	89 14       	cp	r8, r9
 5cc:	58 f4       	brcc	.+22     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5ce:	34 fe       	sbrs	r3, 4
 5d0:	0b c0       	rjmp	.+22     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5d2:	32 fc       	sbrc	r3, 2
 5d4:	09 c0       	rjmp	.+18     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5d6:	83 2d       	mov	r24, r3
 5d8:	8e 7e       	andi	r24, 0xEE	; 238
 5da:	a8 2e       	mov	r10, r24
 5dc:	05 c0       	rjmp	.+10     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5de:	b8 2c       	mov	r11, r8
 5e0:	a3 2c       	mov	r10, r3
 5e2:	03 c0       	rjmp	.+6      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5e4:	b8 2c       	mov	r11, r8
 5e6:	01 c0       	rjmp	.+2      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5e8:	b9 2c       	mov	r11, r9
 5ea:	a4 fe       	sbrs	r10, 4
 5ec:	0f c0       	rjmp	.+30     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5ee:	fe 01       	movw	r30, r28
 5f0:	e8 0d       	add	r30, r8
 5f2:	f1 1d       	adc	r31, r1
 5f4:	80 81       	ld	r24, Z
 5f6:	80 33       	cpi	r24, 0x30	; 48
 5f8:	21 f4       	brne	.+8      	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5fa:	9a 2d       	mov	r25, r10
 5fc:	99 7e       	andi	r25, 0xE9	; 233
 5fe:	a9 2e       	mov	r10, r25
 600:	09 c0       	rjmp	.+18     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 602:	a2 fe       	sbrs	r10, 2
 604:	06 c0       	rjmp	.+12     	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 606:	b3 94       	inc	r11
 608:	b3 94       	inc	r11
 60a:	04 c0       	rjmp	.+8      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 60c:	8a 2d       	mov	r24, r10
 60e:	86 78       	andi	r24, 0x86	; 134
 610:	09 f0       	breq	.+2      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 612:	b3 94       	inc	r11
 614:	a3 fc       	sbrc	r10, 3
 616:	11 c0       	rjmp	.+34     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 618:	a0 fe       	sbrs	r10, 0
 61a:	06 c0       	rjmp	.+12     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 61c:	b2 14       	cp	r11, r2
 61e:	88 f4       	brcc	.+34     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 620:	28 0c       	add	r2, r8
 622:	92 2c       	mov	r9, r2
 624:	9b 18       	sub	r9, r11
 626:	0e c0       	rjmp	.+28     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 628:	b2 14       	cp	r11, r2
 62a:	60 f4       	brcc	.+24     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 62c:	b6 01       	movw	r22, r12
 62e:	80 e2       	ldi	r24, 0x20	; 32
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 636:	b3 94       	inc	r11
 638:	f7 cf       	rjmp	.-18     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 63a:	b2 14       	cp	r11, r2
 63c:	18 f4       	brcc	.+6      	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 63e:	2b 18       	sub	r2, r11
 640:	02 c0       	rjmp	.+4      	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 642:	98 2c       	mov	r9, r8
 644:	21 2c       	mov	r2, r1
 646:	a4 fe       	sbrs	r10, 4
 648:	10 c0       	rjmp	.+32     	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 64a:	b6 01       	movw	r22, r12
 64c:	80 e3       	ldi	r24, 0x30	; 48
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 654:	a2 fe       	sbrs	r10, 2
 656:	17 c0       	rjmp	.+46     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 658:	a1 fc       	sbrc	r10, 1
 65a:	03 c0       	rjmp	.+6      	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 65c:	88 e7       	ldi	r24, 0x78	; 120
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	02 c0       	rjmp	.+4      	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 662:	88 e5       	ldi	r24, 0x58	; 88
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	b6 01       	movw	r22, r12
 668:	0c c0       	rjmp	.+24     	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 66a:	8a 2d       	mov	r24, r10
 66c:	86 78       	andi	r24, 0x86	; 134
 66e:	59 f0       	breq	.+22     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 670:	a1 fe       	sbrs	r10, 1
 672:	02 c0       	rjmp	.+4      	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 674:	8b e2       	ldi	r24, 0x2B	; 43
 676:	01 c0       	rjmp	.+2      	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 678:	80 e2       	ldi	r24, 0x20	; 32
 67a:	a7 fc       	sbrc	r10, 7
 67c:	8d e2       	ldi	r24, 0x2D	; 45
 67e:	b6 01       	movw	r22, r12
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 686:	89 14       	cp	r8, r9
 688:	38 f4       	brcc	.+14     	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 68a:	b6 01       	movw	r22, r12
 68c:	80 e3       	ldi	r24, 0x30	; 48
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 694:	9a 94       	dec	r9
 696:	f7 cf       	rjmp	.-18     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 698:	8a 94       	dec	r8
 69a:	f3 01       	movw	r30, r6
 69c:	e8 0d       	add	r30, r8
 69e:	f1 1d       	adc	r31, r1
 6a0:	80 81       	ld	r24, Z
 6a2:	b6 01       	movw	r22, r12
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 6aa:	81 10       	cpse	r8, r1
 6ac:	f5 cf       	rjmp	.-22     	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 6ae:	22 20       	and	r2, r2
 6b0:	09 f4       	brne	.+2      	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6b2:	42 ce       	rjmp	.-892    	; 0x338 <vfprintf+0x24>
 6b4:	b6 01       	movw	r22, r12
 6b6:	80 e2       	ldi	r24, 0x20	; 32
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 6be:	2a 94       	dec	r2
 6c0:	f6 cf       	rjmp	.-20     	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 6c2:	f6 01       	movw	r30, r12
 6c4:	86 81       	ldd	r24, Z+6	; 0x06
 6c6:	97 81       	ldd	r25, Z+7	; 0x07
 6c8:	02 c0       	rjmp	.+4      	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6ca:	8f ef       	ldi	r24, 0xFF	; 255
 6cc:	9f ef       	ldi	r25, 0xFF	; 255
 6ce:	2b 96       	adiw	r28, 0x0b	; 11
 6d0:	e2 e1       	ldi	r30, 0x12	; 18
 6d2:	0c 94 37 04 	jmp	0x86e	; 0x86e <__epilogue_restores__>

000006d6 <strnlen_P>:
 6d6:	fc 01       	movw	r30, r24
 6d8:	05 90       	lpm	r0, Z+
 6da:	61 50       	subi	r22, 0x01	; 1
 6dc:	70 40       	sbci	r23, 0x00	; 0
 6de:	01 10       	cpse	r0, r1
 6e0:	d8 f7       	brcc	.-10     	; 0x6d8 <strnlen_P+0x2>
 6e2:	80 95       	com	r24
 6e4:	90 95       	com	r25
 6e6:	8e 0f       	add	r24, r30
 6e8:	9f 1f       	adc	r25, r31
 6ea:	08 95       	ret

000006ec <strnlen>:
 6ec:	fc 01       	movw	r30, r24
 6ee:	61 50       	subi	r22, 0x01	; 1
 6f0:	70 40       	sbci	r23, 0x00	; 0
 6f2:	01 90       	ld	r0, Z+
 6f4:	01 10       	cpse	r0, r1
 6f6:	d8 f7       	brcc	.-10     	; 0x6ee <strnlen+0x2>
 6f8:	80 95       	com	r24
 6fa:	90 95       	com	r25
 6fc:	8e 0f       	add	r24, r30
 6fe:	9f 1f       	adc	r25, r31
 700:	08 95       	ret

00000702 <fputc>:
 702:	0f 93       	push	r16
 704:	1f 93       	push	r17
 706:	cf 93       	push	r28
 708:	df 93       	push	r29
 70a:	fb 01       	movw	r30, r22
 70c:	23 81       	ldd	r18, Z+3	; 0x03
 70e:	21 fd       	sbrc	r18, 1
 710:	03 c0       	rjmp	.+6      	; 0x718 <fputc+0x16>
 712:	8f ef       	ldi	r24, 0xFF	; 255
 714:	9f ef       	ldi	r25, 0xFF	; 255
 716:	2c c0       	rjmp	.+88     	; 0x770 <fputc+0x6e>
 718:	22 ff       	sbrs	r18, 2
 71a:	16 c0       	rjmp	.+44     	; 0x748 <fputc+0x46>
 71c:	46 81       	ldd	r20, Z+6	; 0x06
 71e:	57 81       	ldd	r21, Z+7	; 0x07
 720:	24 81       	ldd	r18, Z+4	; 0x04
 722:	35 81       	ldd	r19, Z+5	; 0x05
 724:	42 17       	cp	r20, r18
 726:	53 07       	cpc	r21, r19
 728:	44 f4       	brge	.+16     	; 0x73a <fputc+0x38>
 72a:	a0 81       	ld	r26, Z
 72c:	b1 81       	ldd	r27, Z+1	; 0x01
 72e:	9d 01       	movw	r18, r26
 730:	2f 5f       	subi	r18, 0xFF	; 255
 732:	3f 4f       	sbci	r19, 0xFF	; 255
 734:	31 83       	std	Z+1, r19	; 0x01
 736:	20 83       	st	Z, r18
 738:	8c 93       	st	X, r24
 73a:	26 81       	ldd	r18, Z+6	; 0x06
 73c:	37 81       	ldd	r19, Z+7	; 0x07
 73e:	2f 5f       	subi	r18, 0xFF	; 255
 740:	3f 4f       	sbci	r19, 0xFF	; 255
 742:	37 83       	std	Z+7, r19	; 0x07
 744:	26 83       	std	Z+6, r18	; 0x06
 746:	14 c0       	rjmp	.+40     	; 0x770 <fputc+0x6e>
 748:	8b 01       	movw	r16, r22
 74a:	ec 01       	movw	r28, r24
 74c:	fb 01       	movw	r30, r22
 74e:	00 84       	ldd	r0, Z+8	; 0x08
 750:	f1 85       	ldd	r31, Z+9	; 0x09
 752:	e0 2d       	mov	r30, r0
 754:	09 95       	icall
 756:	89 2b       	or	r24, r25
 758:	e1 f6       	brne	.-72     	; 0x712 <fputc+0x10>
 75a:	d8 01       	movw	r26, r16
 75c:	16 96       	adiw	r26, 0x06	; 6
 75e:	8d 91       	ld	r24, X+
 760:	9c 91       	ld	r25, X
 762:	17 97       	sbiw	r26, 0x07	; 7
 764:	01 96       	adiw	r24, 0x01	; 1
 766:	17 96       	adiw	r26, 0x07	; 7
 768:	9c 93       	st	X, r25
 76a:	8e 93       	st	-X, r24
 76c:	16 97       	sbiw	r26, 0x06	; 6
 76e:	ce 01       	movw	r24, r28
 770:	df 91       	pop	r29
 772:	cf 91       	pop	r28
 774:	1f 91       	pop	r17
 776:	0f 91       	pop	r16
 778:	08 95       	ret

0000077a <__ultoa_invert>:
 77a:	fa 01       	movw	r30, r20
 77c:	aa 27       	eor	r26, r26
 77e:	28 30       	cpi	r18, 0x08	; 8
 780:	51 f1       	breq	.+84     	; 0x7d6 <__ultoa_invert+0x5c>
 782:	20 31       	cpi	r18, 0x10	; 16
 784:	81 f1       	breq	.+96     	; 0x7e6 <__ultoa_invert+0x6c>
 786:	e8 94       	clt
 788:	6f 93       	push	r22
 78a:	6e 7f       	andi	r22, 0xFE	; 254
 78c:	6e 5f       	subi	r22, 0xFE	; 254
 78e:	7f 4f       	sbci	r23, 0xFF	; 255
 790:	8f 4f       	sbci	r24, 0xFF	; 255
 792:	9f 4f       	sbci	r25, 0xFF	; 255
 794:	af 4f       	sbci	r26, 0xFF	; 255
 796:	b1 e0       	ldi	r27, 0x01	; 1
 798:	3e d0       	rcall	.+124    	; 0x816 <__ultoa_invert+0x9c>
 79a:	b4 e0       	ldi	r27, 0x04	; 4
 79c:	3c d0       	rcall	.+120    	; 0x816 <__ultoa_invert+0x9c>
 79e:	67 0f       	add	r22, r23
 7a0:	78 1f       	adc	r23, r24
 7a2:	89 1f       	adc	r24, r25
 7a4:	9a 1f       	adc	r25, r26
 7a6:	a1 1d       	adc	r26, r1
 7a8:	68 0f       	add	r22, r24
 7aa:	79 1f       	adc	r23, r25
 7ac:	8a 1f       	adc	r24, r26
 7ae:	91 1d       	adc	r25, r1
 7b0:	a1 1d       	adc	r26, r1
 7b2:	6a 0f       	add	r22, r26
 7b4:	71 1d       	adc	r23, r1
 7b6:	81 1d       	adc	r24, r1
 7b8:	91 1d       	adc	r25, r1
 7ba:	a1 1d       	adc	r26, r1
 7bc:	20 d0       	rcall	.+64     	; 0x7fe <__ultoa_invert+0x84>
 7be:	09 f4       	brne	.+2      	; 0x7c2 <__ultoa_invert+0x48>
 7c0:	68 94       	set
 7c2:	3f 91       	pop	r19
 7c4:	2a e0       	ldi	r18, 0x0A	; 10
 7c6:	26 9f       	mul	r18, r22
 7c8:	11 24       	eor	r1, r1
 7ca:	30 19       	sub	r19, r0
 7cc:	30 5d       	subi	r19, 0xD0	; 208
 7ce:	31 93       	st	Z+, r19
 7d0:	de f6       	brtc	.-74     	; 0x788 <__ultoa_invert+0xe>
 7d2:	cf 01       	movw	r24, r30
 7d4:	08 95       	ret
 7d6:	46 2f       	mov	r20, r22
 7d8:	47 70       	andi	r20, 0x07	; 7
 7da:	40 5d       	subi	r20, 0xD0	; 208
 7dc:	41 93       	st	Z+, r20
 7de:	b3 e0       	ldi	r27, 0x03	; 3
 7e0:	0f d0       	rcall	.+30     	; 0x800 <__ultoa_invert+0x86>
 7e2:	c9 f7       	brne	.-14     	; 0x7d6 <__ultoa_invert+0x5c>
 7e4:	f6 cf       	rjmp	.-20     	; 0x7d2 <__ultoa_invert+0x58>
 7e6:	46 2f       	mov	r20, r22
 7e8:	4f 70       	andi	r20, 0x0F	; 15
 7ea:	40 5d       	subi	r20, 0xD0	; 208
 7ec:	4a 33       	cpi	r20, 0x3A	; 58
 7ee:	18 f0       	brcs	.+6      	; 0x7f6 <__ultoa_invert+0x7c>
 7f0:	49 5d       	subi	r20, 0xD9	; 217
 7f2:	31 fd       	sbrc	r19, 1
 7f4:	40 52       	subi	r20, 0x20	; 32
 7f6:	41 93       	st	Z+, r20
 7f8:	02 d0       	rcall	.+4      	; 0x7fe <__ultoa_invert+0x84>
 7fa:	a9 f7       	brne	.-22     	; 0x7e6 <__ultoa_invert+0x6c>
 7fc:	ea cf       	rjmp	.-44     	; 0x7d2 <__ultoa_invert+0x58>
 7fe:	b4 e0       	ldi	r27, 0x04	; 4
 800:	a6 95       	lsr	r26
 802:	97 95       	ror	r25
 804:	87 95       	ror	r24
 806:	77 95       	ror	r23
 808:	67 95       	ror	r22
 80a:	ba 95       	dec	r27
 80c:	c9 f7       	brne	.-14     	; 0x800 <__ultoa_invert+0x86>
 80e:	00 97       	sbiw	r24, 0x00	; 0
 810:	61 05       	cpc	r22, r1
 812:	71 05       	cpc	r23, r1
 814:	08 95       	ret
 816:	9b 01       	movw	r18, r22
 818:	ac 01       	movw	r20, r24
 81a:	0a 2e       	mov	r0, r26
 81c:	06 94       	lsr	r0
 81e:	57 95       	ror	r21
 820:	47 95       	ror	r20
 822:	37 95       	ror	r19
 824:	27 95       	ror	r18
 826:	ba 95       	dec	r27
 828:	c9 f7       	brne	.-14     	; 0x81c <__ultoa_invert+0xa2>
 82a:	62 0f       	add	r22, r18
 82c:	73 1f       	adc	r23, r19
 82e:	84 1f       	adc	r24, r20
 830:	95 1f       	adc	r25, r21
 832:	a0 1d       	adc	r26, r0
 834:	08 95       	ret

00000836 <__prologue_saves__>:
 836:	2f 92       	push	r2
 838:	3f 92       	push	r3
 83a:	4f 92       	push	r4
 83c:	5f 92       	push	r5
 83e:	6f 92       	push	r6
 840:	7f 92       	push	r7
 842:	8f 92       	push	r8
 844:	9f 92       	push	r9
 846:	af 92       	push	r10
 848:	bf 92       	push	r11
 84a:	cf 92       	push	r12
 84c:	df 92       	push	r13
 84e:	ef 92       	push	r14
 850:	ff 92       	push	r15
 852:	0f 93       	push	r16
 854:	1f 93       	push	r17
 856:	cf 93       	push	r28
 858:	df 93       	push	r29
 85a:	cd b7       	in	r28, 0x3d	; 61
 85c:	de b7       	in	r29, 0x3e	; 62
 85e:	ca 1b       	sub	r28, r26
 860:	db 0b       	sbc	r29, r27
 862:	0f b6       	in	r0, 0x3f	; 63
 864:	f8 94       	cli
 866:	de bf       	out	0x3e, r29	; 62
 868:	0f be       	out	0x3f, r0	; 63
 86a:	cd bf       	out	0x3d, r28	; 61
 86c:	09 94       	ijmp

0000086e <__epilogue_restores__>:
 86e:	2a 88       	ldd	r2, Y+18	; 0x12
 870:	39 88       	ldd	r3, Y+17	; 0x11
 872:	48 88       	ldd	r4, Y+16	; 0x10
 874:	5f 84       	ldd	r5, Y+15	; 0x0f
 876:	6e 84       	ldd	r6, Y+14	; 0x0e
 878:	7d 84       	ldd	r7, Y+13	; 0x0d
 87a:	8c 84       	ldd	r8, Y+12	; 0x0c
 87c:	9b 84       	ldd	r9, Y+11	; 0x0b
 87e:	aa 84       	ldd	r10, Y+10	; 0x0a
 880:	b9 84       	ldd	r11, Y+9	; 0x09
 882:	c8 84       	ldd	r12, Y+8	; 0x08
 884:	df 80       	ldd	r13, Y+7	; 0x07
 886:	ee 80       	ldd	r14, Y+6	; 0x06
 888:	fd 80       	ldd	r15, Y+5	; 0x05
 88a:	0c 81       	ldd	r16, Y+4	; 0x04
 88c:	1b 81       	ldd	r17, Y+3	; 0x03
 88e:	aa 81       	ldd	r26, Y+2	; 0x02
 890:	b9 81       	ldd	r27, Y+1	; 0x01
 892:	ce 0f       	add	r28, r30
 894:	d1 1d       	adc	r29, r1
 896:	0f b6       	in	r0, 0x3f	; 63
 898:	f8 94       	cli
 89a:	de bf       	out	0x3e, r29	; 62
 89c:	0f be       	out	0x3f, r0	; 63
 89e:	cd bf       	out	0x3d, r28	; 61
 8a0:	ed 01       	movw	r28, r26
 8a2:	08 95       	ret

000008a4 <_exit>:
 8a4:	f8 94       	cli

000008a6 <__stop_program>:
 8a6:	ff cf       	rjmp	.-2      	; 0x8a6 <__stop_program>
